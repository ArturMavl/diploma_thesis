{"name": "test_search_books_eng", "status": "failed", "statusDetails": {"message": "AssertionError: Ожидался статус-код 200, но получен 404\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code", "trace": "@allure.feature(\"API\")\n    @allure.story(\"Поиск книг на латинице\")\n    @pytest.mark.api_test\n    @pytest.mark.positive_test\n    def test_search_books_eng():\n        headers = {\n            'content-type': 'application/json',\n            'authorization': f'Bearer {TOKEN}'\n        }\n    \n        response = requests.get(f\"{BASE_URL_2}/search/product?phrase=geroi nashego vremeni\", headers=headers)\n>       assert response.status_code == 200, f\"Ожидался статус-код 200, но получен {response.status_code}\"\nE       AssertionError: Ожидался статус-код 200, но получен 404\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntest_api.py:64: AssertionError"}, "start": 1724150280992, "stop": 1724150281114, "uuid": "ef139478-e7b9-4fd0-95da-588c82a06b7e", "historyId": "87ad61434c8e6de3dc76ff1ace6a02ff", "testCaseId": "87ad61434c8e6de3dc76ff1ace6a02ff", "fullName": "test_api#test_search_books_eng", "labels": [{"name": "story", "value": "Поиск книг на латинице"}, {"name": "feature", "value": "API"}, {"name": "tag", "value": "positive_test"}, {"name": "tag", "value": "api_test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "MacBook-Air-Artur.local"}, {"name": "thread", "value": "25293-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api"}]}